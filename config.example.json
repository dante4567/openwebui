{
  "version": 0,
  "ui": {
    "enable_signup": false,
    "default_user_role": "pending",
    "enable_community_sharing": false,
    "enable_message_rating": true,
    "enable_user_webhooks": true,
    "pending_user_overlay_title": "",
    "pending_user_overlay_content": "",
    "watermark": ""
  },
  "direct": {
    "enable": false
  },
  "models": {
    "base_models_cache": false
  },
  "openai": {
    "enable": true,
    "api_base_urls": [
      "https://api.openai.com/v1",
      "https://api.groq.com/openai/v1",
      "https://generativelanguage.googleapis.com/v1beta/openai",
      "https://api.anthropic.com/v1"
    ],
    "api_keys": [
      "YOUR_OPENAI_API_KEY",
      "YOUR_GROQ_API_KEY",
      "YOUR_GOOGLE_API_KEY",
      "YOUR_ANTHROPIC_API_KEY"
    ],
    "api_configs": {
      "0": {},
      "1": {
        "enable": true,
        "tags": [],
        "prefix_id": "",
        "model_ids": [],
        "connection_type": "external",
        "auth_type": "bearer"
      },
      "2": {
        "enable": true,
        "tags": [],
        "prefix_id": "",
        "model_ids": [],
        "connection_type": "external",
        "auth_type": "bearer"
      },
      "3": {
        "enable": true,
        "tags": [],
        "prefix_id": "",
        "model_ids": [],
        "connection_type": "external",
        "auth_type": "bearer"
      }
    }
  },
  "image_generation": {
    "engine": "openai",
    "enable": true,
    "prompt": {
      "enable": true
    },
    "openai": {
      "api_base_url": "https://api.openai.com/v1",
      "api_version": "",
      "api_key": "YOUR_OPENAI_API_KEY"
    },
    "gemini": {
      "api_base_url": "",
      "api_key": ""
    },
    "automatic1111": {
      "base_url": "",
      "api_auth": "",
      "cfg_scale": null,
      "sampler": null,
      "scheduler": null
    },
    "comfyui": {
      "base_url": "",
      "api_key": "",
      "workflow": "{\n  \"3\": {\n    \"inputs\": {\n      \"seed\": 0,\n      \"steps\": 20,\n      \"cfg\": 8,\n      \"sampler_name\": \"euler\",\n      \"scheduler\": \"normal\",\n      \"denoise\": 1,\n      \"model\": [\n        \"4\",\n        0\n      ],\n      \"positive\": [\n        \"6\",\n        0\n      ],\n      \"negative\": [\n        \"7\",\n        0\n      ],\n      \"latent_image\": [\n        \"5\",\n        0\n      ]\n    },\n    \"class_type\": \"KSampler\",\n    \"_meta\": {\n      \"title\": \"KSampler\"\n    }\n  },\n  \"4\": {\n    \"inputs\": {\n      \"ckpt_name\": \"model.safetensors\"\n    },\n    \"class_type\": \"CheckpointLoaderSimple\",\n    \"_meta\": {\n      \"title\": \"Load Checkpoint\"\n    }\n  },\n  \"5\": {\n    \"inputs\": {\n      \"width\": 512,\n      \"height\": 512,\n      \"batch_size\": 1\n    },\n    \"class_type\": \"EmptyLatentImage\",\n    \"_meta\": {\n      \"title\": \"Empty Latent Image\"\n    }\n  },\n  \"6\": {\n    \"inputs\": {\n      \"text\": \"Prompt\",\n      \"clip\": [\n        \"4\",\n        1\n      ]\n    },\n    \"class_type\": \"CLIPTextEncode\",\n    \"_meta\": {\n      \"title\": \"CLIP Text Encode (Prompt)\"\n    }\n  },\n  \"7\": {\n    \"inputs\": {\n      \"text\": \"\",\n      \"clip\": [\n        \"4\",\n        1\n      ]\n    },\n    \"class_type\": \"CLIPTextEncode\",\n    \"_meta\": {\n      \"title\": \"CLIP Text Encode (Prompt)\"\n    }\n  },\n  \"8\": {\n    \"inputs\": {\n      \"samples\": [\n        \"3\",\n        0\n      ],\n      \"vae\": [\n        \"4\",\n        2\n      ]\n    },\n    \"class_type\": \"VAEDecode\",\n    \"_meta\": {\n      \"title\": \"VAE Decode\"\n    }\n  },\n  \"9\": {\n    \"inputs\": {\n      \"filename_prefix\": \"ComfyUI\",\n      \"images\": [\n        \"8\",\n        0\n      ]\n    },\n    \"class_type\": \"SaveImage\",\n    \"_meta\": {\n      \"title\": \"Save Image\"\n    }\n  }\n}",
      "nodes": [
        {
          "type": "prompt",
          "key": "text",
          "node_ids": []
        },
        {
          "type": "model",
          "key": "ckpt_name",
          "node_ids": []
        },
        {
          "type": "width",
          "key": "width",
          "node_ids": []
        },
        {
          "type": "height",
          "key": "height",
          "node_ids": []
        },
        {
          "type": "steps",
          "key": "steps",
          "node_ids": []
        },
        {
          "type": "seed",
          "key": "seed",
          "node_ids": []
        }
      ]
    },
    "model": "dall-e-3",
    "size": "512x512",
    "steps": 50
  },
  "audio": {
    "tts": {
      "openai": {
        "api_base_url": "https://api.openai.com/v1",
        "api_key": "YOUR_OPENAI_API_KEY"
      },
      "api_key": "",
      "engine": "openai",
      "model": "tts-1-hd",
      "voice": "alloy",
      "split_on": "punctuation",
      "azure": {
        "speech_region": "",
        "speech_base_url": "",
        "speech_output_format": "audio-24khz-160kbitrate-mono-mp3"
      }
    },
    "stt": {
      "openai": {
        "api_base_url": "https://api.openai.com/v1",
        "api_key": "YOUR_OPENAI_API_KEY"
      },
      "engine": "openai",
      "model": "whisper-1",
      "supported_content_types": [
        ""
      ],
      "whisper_model": "base",
      "deepgram": {
        "api_key": ""
      },
      "azure": {
        "api_key": "",
        "region": "",
        "locales": "",
        "base_url": "",
        "max_speakers": ""
      }
    }
  },
  "rag": {
    "template": "### Task:\nRespond to the user query using the provided context, incorporating inline citations in the format [id] **only when the <source> tag includes an explicit id attribute** (e.g., <source id=\"1\">).\n\n### Guidelines:\n- If you don't know the answer, clearly state that.\n- If uncertain, ask the user for clarification.\n- Respond in the same language as the user's query.\n- If the context is unreadable or of poor quality, inform the user and provide the best possible answer.\n- If the answer isn't present in the context but you possess the knowledge, explain this to the user and provide the answer using your own understanding.\n- **Only include inline citations using [id] (e.g., [1], [2]) when the <source> tag includes an id attribute.**\n- Do not cite if the <source> tag does not contain an id attribute.\n- Do not use XML tags in your response.\n- Ensure citations are concise and directly related to the information provided.\n\n### Example of Citation:\nIf the user asks about a specific topic and the information is found in a source with a provided id attribute, the response should include the citation like in the following example:\n* \"According to the study, the proposed method increases efficiency by 20% [1].\"\n\n### Output:\nProvide a clear and direct response to the user's query, including inline citations in the format [id] only when the <source> tag with id attribute is present in the context.\n\n<context>\n{{CONTEXT}}\n</context>\n\n<user_query>\n{{QUERY}}\n</user_query>\n",
    "top_k": 5,
    "bypass_embedding_and_retrieval": false,
    "full_context": false,
    "enable_hybrid_search": true,
    "top_k_reranker": 3,
    "relevance_threshold": 0,
    "hybrid_bm25_weight": 0.5,
    "CONTENT_EXTRACTION_ENGINE": "external",
    "pdf_extract_images": false,
    "datalab_marker_api_key": "",
    "datalab_marker_api_base_url": "",
    "datalab_marker_additional_config": "",
    "datalab_marker_skip_cache": false,
    "datalab_marker_force_ocr": false,
    "datalab_marker_paginate": false,
    "datalab_marker_strip_existing_ocr": false,
    "datalab_marker_disable_image_extraction": false,
    "datalab_marker_format_lines": false,
    "datalab_marker_output_format": "markdown",
    "DATALAB_MARKER_USE_LLM": false,
    "external_document_loader_url": "http://chromadb:8000",
    "external_document_loader_api_key": "",
    "tika_server_url": "http://tika:9998",
    "docling_server_url": "http://docling:5001",
    "docling_do_ocr": true,
    "docling_force_ocr": false,
    "docling_ocr_engine": "tesseract",
    "docling_ocr_lang": "eng,fra,deu,spa",
    "docling_pdf_backend": "dlparse_v4",
    "docling_table_mode": "accurate",
    "docling_pipeline": "standard",
    "docling_do_picture_description": false,
    "docling_picture_description_mode": "",
    "docling_picture_description_local": {},
    "docling_picture_description_api": {},
    "document_intelligence_endpoint": "",
    "document_intelligence_key": "",
    "mistral_ocr_api_key": "",
    "reranking_engine": "",
    "external_reranker_url": "",
    "external_reranker_api_key": "",
    "reranking_model": "",
    "text_splitter": "",
    "chunk_size": 1500,
    "chunk_overlap": 100,
    "file": {
      "max_size": null,
      "max_count": null,
      "allowed_extensions": []
    },
    "web": {
      "search": {
        "enable": true,
        "engine": "duckduckgo",
        "trust_env": false,
        "result_count": 3,
        "concurrent_requests": 10,
        "domain": {
          "filter_list": []
        },
        "bypass_embedding_and_retrieval": false,
        "bypass_web_loader": false,
        "ollama_cloud_api_key": "",
        "searxng_query_url": "",
        "yacy_query_url": "",
        "yacy_username": "",
        "yacy_password": "",
        "google_pse_api_key": "",
        "google_pse_engine_id": "",
        "brave_search_api_key": "",
        "kagi_search_api_key": "",
        "mojeek_search_api_key": "",
        "bocha_search_api_key": "",
        "serpstack_api_key": "",
        "serpstack_https": true,
        "serper_api_key": "",
        "serply_api_key": "",
        "tavily_api_key": "",
        "searchapi_api_key": "",
        "searchapi_engine": "",
        "serpapi_api_key": "",
        "serpapi_engine": "",
        "jina_api_key": "",
        "bing_search_v7_endpoint": "https://api.bing.microsoft.com/v7.0/search",
        "bing_search_v7_subscription_key": "",
        "exa_api_key": "",
        "perplexity_api_key": "",
        "perplexity_model": "sonar",
        "perplexity_search_context_usage": "medium",
        "sougou_api_sid": "",
        "sougou_api_sk": "",
        "external_web_search_url": "",
        "external_web_search_api_key": "",
        "tavily_extract_depth": "basic"
      },
      "loader": {
        "concurrent_requests": 10,
        "engine": "",
        "ssl_verification": true,
        "playwright_ws_url": "",
        "playwright_timeout": 10000,
        "firecrawl_api_key": "",
        "firecrawl_api_url": "https://api.firecrawl.dev",
        "external_web_loader_url": "",
        "external_web_loader_api_key": ""
      }
    },
    "youtube_loader_language": [
      "en"
    ],
    "youtube_loader_proxy_url": "",
    "embedding_engine": "openai",
    "embedding_model": "text-embedding-3-small",
    "openai_api_base_url": "https://api.openai.com/v1",
    "openai_api_key": "YOUR_OPENAI_API_KEY",
    "ollama": {
      "url": "http://ollama:11434",
      "key": ""
    },
    "azure_openai": {
      "base_url": "",
      "api_key": "",
      "api_version": ""
    },
    "embedding_batch_size": 1
  },
  "file": {
    "image_compression_width": null,
    "image_compression_height": null
  },
  "google_drive": {
    "enable": false
  },
  "onedrive": {
    "enable": false
  },
  "webhook_url": "",
  "auth": {
    "admin": {
      "show": true
    },
    "api_key": {
      "enable": true,
      "endpoint_restrictions": false,
      "allowed_endpoints": ""
    },
    "jwt_expiry": "-1"
  },
  "webui": {
    "url": "http://localhost:8080"
  },
  "channels": {
    "enable": false
  },
  "notes": {
    "enable": true
  },
  "ldap": {
    "enable": false
  },
  "tool_server": {
    "connections": [
      {
        "url": "http://weather-tool:8000",
        "path": "openapi.json",
        "type": "openapi",
        "auth_type": "bearer",
        "key": "",
        "config": {
          "enable": true,
          "access_control": null
        },
        "spec_type": "url",
        "spec": "",
        "info": {
          "id": "",
          "name": "Weather Tool",
          "description": "Real-time weather forecasts"
        }
      },
      {
        "url": "http://filesystem-tool:8000",
        "path": "openapi.json",
        "type": "openapi",
        "auth_type": "bearer",
        "key": "",
        "config": {
          "enable": true,
          "access_control": null
        },
        "spec_type": "url",
        "spec": "",
        "info": {
          "id": "",
          "name": "Filesystem Tool",
          "description": "Read/write files in workspace"
        }
      },
      {
        "url": "http://git-tool:8000",
        "path": "openapi.json",
        "type": "openapi",
        "auth_type": "bearer",
        "key": "",
        "config": {
          "enable": true,
          "access_control": null
        },
        "spec_type": "url",
        "spec": "",
        "info": {
          "id": "",
          "name": "Git Tool",
          "description": "Git repository operations"
        }
      },
      {
        "url": "http://memory-tool:8000",
        "path": "openapi.json",
        "type": "openapi",
        "auth_type": "bearer",
        "key": "",
        "config": {
          "enable": true,
          "access_control": null
        },
        "spec_type": "url",
        "spec": "",
        "info": {
          "id": "",
          "name": "Memory Tool",
          "description": "Knowledge graph storage"
        }
      }
    ]
  }
}
